<?php
/**
 *
 */
namespace Kaoken\VeritransJpAirWeb;

use Carbon\Carbon;
use Illuminate\Database\Eloquent\Model;
use AirWeb;

class VeritransJpAirWebCommodityRegister extends Model
{
    protected $table = 'air_web_commodity_register';
    /**
     * 複数代入する属性
     *
     * @var array
     */
    protected $fillable = [
        'merchanthash', 'session_id','settlement_type', 'order_id', 'amount',
        'shipping_fee','timelimit_of_payment',

        'finish_payment_return_url', 'unfinish_payment_return_url','error_payment_return_url', 'finish_payment_access_url',

        'merchant_encryption_key','browser_encryption_key',

        'dummy_payment_flag', 'card_capture_flag', 'name1', 'kana1', 'name2', 'kana2',
        'address1', 'address2', 'address3', 'zip_code', 'telephone_no', 'mailaddress',
        'birthday', 'sex'
    ];
    public $timestamps = false;

    /**
     * 日付により変更を起こすべき属性
     *
     * @var array
     */
    protected $dates = [
        'timelimit_of_payment', // コンビニの支払期限
        'birthday',             // ユーザーの生年月日
        'created_at',           // 作成日
        'payment_notification_at',
        'cvs_notification_at'
    ];

    /**
     * Create a new Eloquent model instance.
     *
     * @param  array  $attributes
     */
    public function __construct(array $attributes = [])
    {
        parent::__construct($attributes);
        if( count($attributes) === 0){
            $this->resetSettlementType();
            $this->dummy_payment_flag = env('AW_DUMMY_PAYMENT_FLAG',1);
            $this->card_capture_flag = env('AW_CARD_CAPTURE_FLAG', 1);
            if($this->settlement_type === '00' || $this->payment_type === '02')
                $this->timelimit_of_payment = Carbon::now()->addDays(env('AW_CVS_PAYMENT_LIMIT', 60));
            else
                $this->timelimit_of_payment = null;
        }
    }

    /**
     * モデルをデータベースに保存します。
     *
     * @param  array  $options
     * @return bool
     */
    public function save(array $options = [])
    {
        $c = VeritransJpAirWebCommodityRegister::where('order_id',$this->order_id)
            ->count();
        if( $c === 0 )
            $this->created_at = Carbon::now();

        return parent::save($options); // TODO: Change the autogenerated stub
    }

    /**
     * 現在 設定済みの 決済タイプを、リセットする
     */
    protected function resetSettlementType()
    {
        $i = env('AW_SETTLEMENT_TYPE','00');
        $t = '00';
        switch($i){
            case 1: $t='01';break;
            case 2: $t='02';break;
            default:$t='00';
        }
        $this->settlement_type = $t;
    }


    /**
     * 何の関連の無い空の商品を作成する
     * ただし、`order_id`は、このオーダーIDが入力済み
     * @param string    $id     商品ID /[a-z|A-Z|0-9|-_]/
     * @param int       $unit   単価
     * @param int       $num    個数
     * @param string    $name   商品名
     * @param string    $code   JANコード /[a-z|A-Z|0-9|-_]/
     * @return VeritransJpAirWebCommodity
     * @throws \Exception
     */
    public function createCommodity($id,$unit,$num,$name,$code)
    {
        $c = VeritransJpAirWebCommodityRegister::where('order_id',$this->order_id)
            ->count();
        if( $c !== 1 ){
            throw new \Exception('オーダーが保存されてない状態で`createCommodity`を呼び出した。');
        }
        $o = AirWeb::createEmptyCommodity();
        $o->order_id = $this->order_id;
        $o->commodity_id = $id;
        $o->commodity_unit = $unit;
        $o->commodity_num = $num;
        $o->commodity_name = $name;
        $o->jan_code = $code;

        return  $o;
    }

    /**
     * 現在のセッションIDを`session_id`にセットする
     */
    public function setCurrentSessionId()
    {
        $this->session_id = session()->getId();
    }

    /**
     * 現在の状態からハッシュ値を生成する
     *
     * @return string ハッシュ値
     */
    public function setCreateMerchantHash()
    {
        $ctx = hash_init('sha512');

        $str = env('AW_MERCHANT_HASH_KEY') . "," . env('AW_MERCHANT_ID') . ",";
        $str.= (!($this->settlement_type==='00'||$this->settlement_type==='01'||$this->settlement_type==='02')?'00':$this->settlement_type) . ",";
        $str.= $this->order_id . "," . $this->amount;
        hash_update($ctx, $str);
        $hash = hash_final($ctx, true);
        $this->merchanthash = bin2hex($hash);
    }


    // <editor-fold desc="リレーション定義">
    /**
     * AirWebの商品群
     * @return \Illuminate\Database\Eloquent\Relations\HasMany
     */
    public function airWebCommodity()
    {
        return $this->hasMany(AirWeb::getCommodityClass(),'order_id', 'order_id');
    }
    /**
     * 決済完了通知
     * @return \Illuminate\Database\Eloquent\Relations\HasMany
     */
    public function airWebPaymentNotification()
    {
        return $this->hasOne(AirWeb::getPaymentNotificationClass(),'order_id', 'order_id');
    }
    /**
     * コンビニ入金通知
     * @return \Illuminate\Database\Eloquent\Relations\HasMany
     */
    public function airWebCvsPaymentNotification()
    {
        return $this->hasOne(AirWeb::getCvsPaymentNotificationClass(),'order_id', 'order_id');
    }
    // </editor-fold>
}